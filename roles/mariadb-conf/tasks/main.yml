---
# tasks file for mariadb-conf
- name: Install packages and make phpMyAdmin accessible on localhost
  become: yes
  tags:
  - packages
  block:
  - name: Install phpMyAdmin and pip3
    apt:
      name:
      - phpmyadmin
      - python3-pip
      state: present
      update_cache: yes
      cache_valid_time: 3600

  - name: Install PyMySql
    pip:
      name: PyMySql
      state: present
      executable: pip3
      # executable: /usr/local/bin/pip3

  - name: Include phpMyAdmin configuration in Apache main config
    lineinfile:
      path: /etc/apache2/apache2.conf
      line: Include /etc/phpmyadmin/apache.conf
      regexp: ^\s*Include\s+\S+phpmyadmin\S*\.conf
      state: present
    notify: reload apache2

- name: Check if MySQL root password is already set in /root/.my.cfg
  become: yes
  stat:
    path: /root/.my.cnf
  register: st

- name: MYSQL configuration 
  become: yes
  when: st.stat.exists == false
  tags:
  - mysql
  block:
  # - name: Generate a new MySQL root password
  #   command: "openssl rand -base64 12"
  #   register: password_out
  # - set_fact:
  #     password: "{{ password_out.stdout }}"
  # - debug:
  #     var: password

  - set_fact:
      password: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits'], length=12) }}"

  - name: Save password to /root/.my.cnf
    template:
      src: my.cnf.j2
      dest: /root/.my.cnf

  # pouzitie lineinfile:
  # regex: ^password=.*
  # line: "password={{ password }}"

  - name: Create database user 'root' with generated password
    mysql_user:
      name: root
      password: "{{ password }}"
      priv: '*.*:ALL,GRANT'
      state: present
      host: "{{ host }}"
      login_unix_socket: /run/mysqld/mysqld.sock
    loop: "{{ mysql_hosts }}"
    loop_control:
      loop_var: host

  - name: Removes all anonymous user accounts
    mysql_user:
      name: ''
      host: "{{ item }}"
      state: absent
      login_unix_socket: /run/mysqld/mysqld.sock
    loop: "{{ mysql_hosts }}"

  - name: Delete test database
    mysql_db:
      name: test
      state: absent
      login_unix_socket: /run/mysqld/mysqld.sock

- when: st.stat.exists
  debug:
    msg: MySql DB already configured
